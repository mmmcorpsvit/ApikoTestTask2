{"version":3,"sources":["src/utils.js","src/index.js"],"names":["ajax","api_url","aditional_params","onError","undefined","onDone","query_params","API_KEY","url","xhr","XMLHttpRequest","addEventListener","readyState","DONE","responseText","JSON","parse","onerror","open","setRequestHeader","send","App","BASE_URL","MOVIE_TYPES","popular","name","rated","state","movies_type","main","render_main_page","data","movie_url","res","movie_page","alert","home_render","app","movie_type_view","active_movie_type","index","mtype","active","handleMovieTypeClick","obj","e","value","home_view","render_pagination","handler","page","total_pages","handleMoviePage","getAttribute","root_id","root_id_element","document","getElementById","innerHTML","results","movies","pagination","total_results","movie","id","overview","poster_path","modal_view","activity_page","object","btn","onclick","handleMovie"],"mappings":"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","file":"src.31d6ea8e.js","sourceRoot":"..","sourcesContent":["// function path(routher, view, name) {\r\n//   return {\r\n//     routher: routher,\r\n//     view: view,\r\n//     name: name\r\n//   };\r\n// }\r\n\r\nfunction ajax(\r\n  api_url,\r\n  aditional_params,\r\n  onError = undefined,\r\n  onDone = undefined\r\n) {\r\n  const API_KEY = \"520586ec107ebeef4af3a185ee10ae9b\";\r\n\r\n  let res = undefined;\r\n  let data = \"{}\";\r\n  let query_params = `?language=en-US&api_key=${API_KEY}`;\r\n  if (aditional_params) {\r\n    query_params += aditional_params;\r\n  }\r\n\r\n  let url = `${api_url}${query_params}`;\r\n  let xhr = new XMLHttpRequest();\r\n  // xhr.withCredentials = true;\r\n\r\n  xhr.addEventListener(\"readystatechange\", function() {\r\n    if (this.readyState === this.DONE) {\r\n      res = this.responseText;\r\n      // console.log(this.responseText);\r\n      // document.getElementById(\"app\").innerHTML = res['page'];\r\n      if (onDone) {\r\n        onDone(JSON.parse(this.responseText));\r\n      }\r\n    }\r\n  });\r\n\r\n  // TODO: refactor CORS\r\n\r\n  xhr.onerror = onError;\r\n  // xhr.onloadend = onDone;\r\n  xhr.open(\"GET\", url);\r\n\r\n  // xhr.open(\"GET\", `https://api.themoviedb.org/3/tv/top_rated${query_params}`);\r\n\r\n  // xhr.open(\"GET\", `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=Ponyo&year=2008`);\r\n  // xhr.open(\"GET\", `https://api.themoviedb.org/3/authentication/token/validate_with_login?api_key=${API_KEY}`);\r\n\r\n  xhr.setRequestHeader(\"Origin\", \"*\");\r\n  // xhr.setRequestHeader(\"Origin\", location.origin);\r\n  // xhr.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n  // xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n  // xhr.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n  // xhr.setRequestHeader(\"Access-Control-Allow-Headers\", \"*\");\r\n  // xhr.setRequestHeader(\"Access-Control-Allow-Credentials\", \"true\");\r\n  // xhr.setRequestHeader(\"Access-Control-Allow-Methods\", \"GET,HEAD,OPTIONS,POST,PUT,DELETE\");\r\n  // xhr.setRequestHeader(\"Access-Control-Allow-Headers\", \"Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers\");\r\n  // xhr.setRequestHeader('Access-Control-Allow-Headers', '*');\r\n  // xhr.setRequestHeader('Content-type', 'application/ecmascript');\r\n  // xhr.setRequestHeader('Access-Control-Allow-Origin', '*');\r\n\r\n  xhr.send(data);\r\n}\r\n","import \"./styles.css\";\n// import State from \"./state\";\nimport { ajax } from \"./utils\";\n\n/////////// ****************** Total Rework !!!!!!!!!!!!!!!! /////////////////////////////////////1\n\n// import './themoviedb';\n// import './utils';\n\n// https://api.themoviedb.org/3/tv/top_rated?api_key=520586ec107ebeef4af3a185ee10ae9b&language=en-US&page=1\n\nclass App {\n  constructor() {\n    // TODO: Add @babel/plugin-proposal-class-properties (https://git.io/vb4SL) to the 'plugins' section of your Babel config to enable transformation.\n    this.BASE_URL = \"https://api.themoviedb.org/3/\";\n\n    this.MOVIE_TYPES = {\n      popular: {\n        name: \"Popular TV shows\",\n        url: `${this.BASE_URL}tv/popular`\n      },\n      rated: {\n        name: \"Top Rated TV shows\",\n        url: `${this.BASE_URL}tv/top_rated`\n      }\n    };\n\n    this.state = {movies_type: \"popular\"};\n    this.main();\n  }\n\n  main() {\n    // this.state.setInitialState({\n    //   movies_type: \"popular\"\n    // });\n\n    // this.state.movies_type = \"popular\";\n\n    // routhing\n    this.render_main_page();\n\n    // let app = new app_themoviedb();\n    // console.log(app.query('ffdg'));\n  }\n\n  render_main_page(data) {\n    let movie_url = this.MOVIE_TYPES[this.state.movies_type][\"url\"];\n    let res = { state: this.state };\n\n    let aditional_params = \"\";\n\n    if (this.state.movie_page) {\n      aditional_params = `&page=${this.state.movie_page}`;\n    }\n\n    ajax(\n      movie_url,\n      aditional_params,\n      function() {\n        alert(\"Ajax error!\");\n      },\n\n      function(data) {\n        res[\"data\"] = data;\n        // home_view(data);\n        home_render(res);\n      }\n    );\n  }\n}\n\nconst app = new App();\n\n// ************************* Movie Type Selector ***************************************\nfunction movie_type_view(active_movie_type) {\n  // let res = '';\n\n  let res = \"\";\n\n  for (let index in MOVIE_TYPES) {\n    let mtype = MOVIE_TYPES[index];\n    let active = \"\";\n    if (active_movie_type === index) {\n      active = 'checked=\"checked\"';\n    }\n\n    res += `<label><input class=\"movie_type_radio\" type=\"radio\" name=\"movie_type\" value=\"${index}\" onchange=\"handleMovieTypeClick(this, event)\" ${active}>\n                    ${mtype.name}\n                </label>`;\n  }\n\n  res = `\n    <div>\n \n    <form id=\"select_movie_type\" action=\"\" method=\"post\">\n        <fieldset> <legend><b>Movie type:</b></legend>\n        ${res}\n        </fieldset>\n        </form>\n    </div>\n    `;\n\n  return res;\n}\n\nfunction handleMovieTypeClick(obj, e) {\n  // let movie_type = obj.value;\n  state[\"movies_type\"] = obj.value;\n  state.movie_page = 1;\n  home_view();\n}\n\n// ************************* Movie Type Selector ***************************************\n\nfunction render_pagination(data) {\n  let handler = `href=\"#\" onclick=\"return handleMoviePage(this)\"`;\n\n  let res = `<li><a ${handler} data-page=\"1\">First</a></li>`;\n\n  if (data.page - 1 > 1) {\n    res += `<li><a ${handler} data-page=\"${data.page - 1}\">Prior</a></li>`;\n  }\n\n  if (data.page + 1 < data.total_pages) {\n    res += `<li><a ${handler} data-page=\"${data.page + 1}\">Next</a></li>`;\n  }\n\n  res += `<li><a ${handler} data-page=\"${data.total_pages}\">Last</a></li>\n\n    <br>\n    page: ${data.page}\n    <br>\n    total pages: ${data.total_pages}`;\n  return res;\n}\n\nfunction handleMoviePage(obj) {\n  // e.preventDefault();\n  // e.preventDefault();\n  // let href = obj.attr(\"href\");\n  state.movie_page = obj.getAttribute(\"data-page\");\n\n  render_main_page();\n  return false;\n}\n\nfunction home_render(data, root_id = undefined) {\n  let root_id_element = \"app\";\n  if (root_id !== undefined) {\n    root_id_element = root_id;\n  }\n\n  document.getElementById(root_id_element).innerHTML = \"\";\n\n  let handler = `onclick=\"handleMovie(this);return false;\"`;\n\n  let res = \"\";\n  // alert('Ajax done 3!');\n  // res = `Done !!!! Loaded: ${data['total_results']}`;\n\n  let results = data.data[\"results\"];\n  let movies = \"\";\n\n  let pagination = {\n    page: data.data[\"page\"],\n    total_results: data.data[\"total_results\"],\n    total_pages: data.data[\"total_pages\"]\n  };\n\n  for (let index in results) {\n    let movie = results[index];\n    movies += `<li><a href=\"#\" \n            data-type=\"${data.state.movies_type}\" \n            data-id=\"${movie.id}\" \n            data-name=\"${movie.name}\"\n            data-overview=\"${movie.overview}\"\n            \n            data-poster=\"${movie.poster_path}\"\n               \n            ${handler}>${movie.name}</a></li>`;\n  }\n\n  res = `\n    ${movie_type_view(data.state.movies_type)}\n\n    <ul>\n        ${movies}        \n    </ul>\n  \n    <div class=\"pagination\">\n        <ul >\n            ${render_pagination(pagination)}\n        </ul>\n    </div>\n    `;\n\n  // res += `\n  // <div id=\"movie_details\">\n  // </div>\n  //\n  // <div id=\"movie_details\">\n  // </div>\n  //\n  // <div id=\"movie_details\">\n  // </div>\n  // `;\n\n  document.getElementById(\"app\").innerHTML = res;\n}\n\nfunction modal_view(data) {\n  let aditional_params = \"\";\n  // let activity_page = data.activity_page;\n\n  // let e = data.object.getAttribute('data-name');\n  // TODO: poster fix ?\n\n  let res = \"\";\n  let movie_url = \"\";\n\n  if (data.activity_page === \"handleMovie\") {\n    res = `\n            id: ${data.object.getAttribute(\"data-id\")} <br>\n            name: ${data.object.getAttribute(\"data-name\")} <br><br>\n            overview: ${data.object.getAttribute(\"data-overview\")} <br><br>\n            poster: ${data.object.getAttribute(\"data-poster\")} <br>        \n        `;\n\n    // ???????????????\n    movie_url = `${BASE_URL}tv/popular`;\n  }\n\n  document.getElementById(\"modal_body\").innerHTML = res;\n\n  btn.onclick(data);\n  return false;\n}\n\nfunction handleMovie(obj) {\n  // По кліку на конкретний елемент списку, потрібно показати заголовок, опис, постер, кількість сезонів, кількість епізодів і список сезонів даного TV show.\n  // btn.onclick(obj);\n\n  let res = {\n    activity_page: \"handleMovie\",\n    object: obj\n  };\n\n  modal_view(res);\n}\n\n// let url = [\n//     path('', view = home_view(), name = 'home'),\n// ];\n\n// movie.init(){}\n"]}