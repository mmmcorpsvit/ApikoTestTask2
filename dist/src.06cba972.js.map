{"version":3,"sources":["src/utils.js","src/index.js"],"names":["ajax","api_url","aditional_params","onError","undefined","onDone","query_params","API_KEY","url","xhr","XMLHttpRequest","addEventListener","readyState","DONE","responseText","JSON","parse","onerror","open","setRequestHeader","send","App","BASE_URL","MOVIE_TYPES","popular","name","rated","state","movies_type","render_main_page","data","movie_url","res","movie_page","alert","home_render","active_movie_type","index","mtype","active","obj","e","value","handler","page","total_pages","getAttribute","root_id","root_id_element","document","getElementById","innerHTML","results","movies","pagination","total_results","movie","id","overview","poster_path","movie_type_view","render_pagination","activity_page","object","btn","onclick","modal_view","app","main"],"mappings":"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","file":"src.06cba972.js","sourceRoot":"..","sourcesContent":["// function path(routher, view, name) {\r\n//   return {\r\n//     routher: routher,\r\n//     view: view,\r\n//     name: name\r\n//   };\r\n// }\r\n\r\nexport default function ajax(\r\n  api_url,\r\n  aditional_params,\r\n  onError = undefined,\r\n  onDone = undefined\r\n) {\r\n  const API_KEY = \"520586ec107ebeef4af3a185ee10ae9b\";\r\n\r\n  let res = undefined;\r\n  let data = \"{}\";\r\n  let query_params = `?language=en-US&api_key=${API_KEY}`;\r\n  if (aditional_params) {\r\n    query_params += aditional_params;\r\n  }\r\n\r\n  let url = `${api_url}${query_params}`;\r\n  let xhr = new XMLHttpRequest();\r\n  // xhr.withCredentials = true;\r\n\r\n  xhr.addEventListener(\"readystatechange\", function() {\r\n    if (this.readyState === this.DONE) {\r\n      res = this.responseText;\r\n      // console.log(this.responseText);\r\n      // document.getElementById(\"app\").innerHTML = res['page'];\r\n      if (onDone) {\r\n        onDone(JSON.parse(this.responseText));\r\n      }\r\n    }\r\n  });\r\n\r\n  // TODO: refactor CORS\r\n\r\n  xhr.onerror = onError;\r\n  // xhr.onloadend = onDone;\r\n  xhr.open(\"GET\", url);\r\n\r\n  // xhr.open(\"GET\", `https://api.themoviedb.org/3/tv/top_rated${query_params}`);\r\n\r\n  // xhr.open(\"GET\", `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=Ponyo&year=2008`);\r\n  // xhr.open(\"GET\", `https://api.themoviedb.org/3/authentication/token/validate_with_login?api_key=${API_KEY}`);\r\n\r\n  xhr.setRequestHeader(\"Origin\", \"*\");\r\n  // xhr.setRequestHeader(\"Origin\", location.origin);\r\n  // xhr.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n  // xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n  // xhr.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n  // xhr.setRequestHeader(\"Access-Control-Allow-Headers\", \"*\");\r\n  // xhr.setRequestHeader(\"Access-Control-Allow-Credentials\", \"true\");\r\n  // xhr.setRequestHeader(\"Access-Control-Allow-Methods\", \"GET,HEAD,OPTIONS,POST,PUT,DELETE\");\r\n  // xhr.setRequestHeader(\"Access-Control-Allow-Headers\", \"Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers\");\r\n  // xhr.setRequestHeader('Access-Control-Allow-Headers', '*');\r\n  // xhr.setRequestHeader('Content-type', 'application/ecmascript');\r\n  // xhr.setRequestHeader('Access-Control-Allow-Origin', '*');\r\n\r\n  xhr.send(data);\r\n}\r\n","import \"./styles.css\";\n// import State from \"./state\";\nimport ajax from \"./utils\";\n\n// https://api.themoviedb.org/3/tv/top_rated?api_key=520586ec107ebeef4af3a185ee10ae9b&language=en-US&page=1\n\nclass App {\n    constructor() {\n        // TODO: Add @babel/plugin-proposal-class-properties (https://git.io/vb4SL) to the 'plugins' section of your Babel config to enable transformation.\n        this.BASE_URL = \"https://api.themoviedb.org/3/\";\n\n        this.MOVIE_TYPES = {\n            popular: {\n                name: \"Popular TV shows\",\n                url: `${this.BASE_URL}tv/popular`\n            },\n            rated: {\n                name: \"Top Rated TV shows\",\n                url: `${this.BASE_URL}tv/top_rated`\n            }\n        };\n\n        this.state = {movies_type: \"popular\"};\n    }\n\n    main() {\n        // routhing\n        this.render_main_page();\n    }\n\n    render_main_page(data) {\n        let movie_url = this.MOVIE_TYPES[this.state.movies_type][\"url\"];\n        let res = {state: this.state};\n\n        let aditional_params = \"\";\n\n        if (this.state.movie_page) {\n            aditional_params = `&page=${this.state.movie_page}`;\n        }\n\n        ajax(\n            movie_url,\n            aditional_params,\n            function () {\n                alert(\"Ajax error!\");\n            },\n\n            function (data) {\n                res[\"data\"] = data;\n                // home_view(data);\n                this.home_render(res);\n            }\n        );\n    }\n\n    // ************************* Movie Type Selector ***************************************\n    movie_type_view(active_movie_type) {\n        // let res = '';\n\n        let res = \"\";\n\n        for (let index in this.MOVIE_TYPES) {\n            let mtype = this.MOVIE_TYPES[index];\n            let active = \"\";\n            if (active_movie_type === index) {\n                active = 'checked=\"checked\"';\n            }\n\n            res += `<label><input class=\"movie_type_radio\" type=\"radio\" name=\"movie_type\" value=\"${index}\" onchange=\"this.handleMovieTypeClick(this, event)\" ${active}>\n                    ${mtype.name}\n                </label>`;\n        }\n\n        res = `\n    <div>\n \n    <form id=\"select_movie_type\" action=\"\" method=\"post\">\n        <fieldset> <legend><b>Movie type:</b></legend>\n        ${res}\n        </fieldset>\n        </form>\n    </div>\n    `;\n\n        return res;\n    }\n\n    handleMovieTypeClick(obj, e) {\n        // let movie_type = obj.value;\n        this.state[\"movies_type\"] = obj.value;\n        this.state.movie_page = 1;\n        this.home_render();\n    }\n\n    // ************************* Movie Type Selector ***************************************\n\n    render_pagination(data) {\n        let handler = `href=\"#\" onclick=\"return handleMoviePage(this)\"`;\n\n        let res = `<li><a ${handler} data-page=\"1\">First</a></li>`;\n\n        if (data.page - 1 > 1) {\n            res += `<li><a ${handler} data-page=\"${data.page - 1}\">Prior</a></li>`;\n        }\n\n        if (data.page + 1 < data.total_pages) {\n            res += `<li><a ${handler} data-page=\"${data.page + 1}\">Next</a></li>`;\n        }\n\n        res += `<li><a ${handler} data-page=\"${data.total_pages}\">Last</a></li>\n\n    <br>\n    page: ${data.page}\n    <br>\n    total pages: ${data.total_pages}`;\n        return res;\n    }\n\n\n    handleMoviePage(obj) {\n        // e.preventDefault();\n        // e.preventDefault();\n        // let href = obj.attr(\"href\");\n      this.state.movie_page = obj.getAttribute(\"data-page\");\n\n      this.render_main_page();\n        return false;\n    }\n\n\n    home_render(data, root_id = undefined) {\n        let root_id_element = \"app\";\n        if (root_id !== undefined) {\n            root_id_element = root_id;\n        }\n\n        document.getElementById(root_id_element).innerHTML = \"\";\n\n        let handler = `onclick=\"handleMovie(this);return false;\"`;\n\n        let res = \"\";\n        // alert('Ajax done 3!');\n        // res = `Done !!!! Loaded: ${data['total_results']}`;\n\n        let results = data.data[\"results\"];\n        let movies = \"\";\n\n        let pagination = {\n            page: data.data[\"page\"],\n            total_results: data.data[\"total_results\"],\n            total_pages: data.data[\"total_pages\"]\n        };\n\n        for (let index in results) {\n            let movie = results[index];\n            movies += `<li><a href=\"#\" \n            data-type=\"${data.state.movies_type}\" \n            data-id=\"${movie.id}\" \n            data-name=\"${movie.name}\"\n            data-overview=\"${movie.overview}\"\n            \n            data-poster=\"${movie.poster_path}\"\n               \n            ${handler}>${movie.name}</a></li>`;\n        }\n\n        res = `\n    ${movie_type_view(data.state.movies_type)}\n\n    <ul>\n        ${movies}        \n    </ul>\n  \n    <div class=\"pagination\">\n        <ul >\n            ${this.render_pagination(pagination)}\n        </ul>\n    </div>\n    `;\n\n        // res += `\n        // <div id=\"movie_details\">\n        // </div>\n        //\n        // <div id=\"movie_details\">\n        // </div>\n        //\n        // <div id=\"movie_details\">\n        // </div>\n        // `;\n\n        document.getElementById(\"app\").innerHTML = res;\n    }\n\n\n    modal_view(data) {\n        let aditional_params = \"\";\n        // let activity_page = data.activity_page;\n\n        // let e = data.object.getAttribute('data-name');\n        // TODO: poster fix ?\n\n        let res = \"\";\n        let movie_url = \"\";\n\n        if (data.activity_page === \"handleMovie\") {\n            res = `\n            id: ${data.object.getAttribute(\"data-id\")} <br>\n            name: ${data.object.getAttribute(\"data-name\")} <br><br>\n            overview: ${data.object.getAttribute(\"data-overview\")} <br><br>\n            poster: ${data.object.getAttribute(\"data-poster\")} <br>        \n        `;\n\n            // ???????????????\n            movie_url = `${this.BASE_URL}tv/popular`;\n        }\n\n        document.getElementById(\"modal_body\").innerHTML = res;\n\n        btn.onclick(data);\n        return false;\n    }\n\n\n    handleMovie(obj) {\n        // По кліку на конкретний елемент списку, потрібно показати заголовок, опис, постер, кількість сезонів, кількість епізодів і список сезонів даного TV show.\n        // btn.onclick(obj);\n\n        let res = {\n            activity_page: \"handleMovie\",\n            object: obj\n        };\n\n      this.modal_view(res);\n    }\n\n\n}\n\nconst app = new App();\napp.main();\n"]}